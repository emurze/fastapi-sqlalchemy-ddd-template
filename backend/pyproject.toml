[tool.poetry]
name = "online-shop"
version = "0.1.0"
description = ""
authors = ["emurze <grayemurze@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
asyncpg = "^0.29.0"
sqlalchemy = "^2.0.27"
sqlalchemy-utils = "^0.41.2"
pydantic = "^2.6.3"
pydantic-settings = "^2.2.1"
pytest = "^8.0.2"
pytest-asyncio = "^0.23.5"
alembic = "^1.13.1"
black = "^24.2.0"
mypy = "^1.8.0"
flake8 = "^7.0.0"
flake8-pyproject = "^1.2.3"
fastapi = "^0.110.0"
fastapi-cache2 = {extras = ["redis"], version = "^0.2.1"}
uvicorn = "^0.27.1"
httpx = "^0.27.0"
redis = "4.5"
asgi-lifespan = "^2.1.0"
dependency-injector = "^4.41.0"
dacite = "^1.8.1"

[tool.poetry.dev-dependencies]
poethepoet = "^0.25.0"
pytest-cov = "^4.1.0"

[tool.poe.tasks]
compose_up       = "docker compose up --build"
compose_clean    = "docker compose down -v"
start            = "python src/main.py"
test             = "bash -c 'pytest -s -m unit && pytest -s -m integration && pytest -s -m e2e'"
test_all         = "pytest -s tests"
test_domain      = "pytest -s -k domain"
test_infra       = "pytest -s -k infra"
test_application = "pytest -s -k application"
test_unit        = "pytest -s -m unit"
test_integration = "pytest -s -m integration"
test_e2e         = "pytest -s -m e2e"
test_marked      = "pytest -s -m marked tests"
test_coverage    = "pytest -s --cov=src --cov-report=html tests"
format           = "black . -l 79 tests src"
lint             = "flake8 --toml-config pyproject.toml src tests"
check_types      = "mypy src tests"
makemigrations   = "alembic revision --autogenerate"
migrate          = "alembic upgrade head"

[tool.poe.tasks.check]
sequence = ["lint", "check_types", "test"]

[tool.flake8]
exclude = [".git", "*migrations*", "*settings*"]
max-line-length = 100
ignore = ["E402", "E501", "E704", "F401", "W503"]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::Warning:.*test class 'TestRunner'.*",
    "ignore::DeprecationWarning:httpx.*"
]
addopts = ["-rsxX", "-l", "--tb=short", "--strict-markers"]
xfail_strict = true
cache_dir = ".cache/pytest"
asyncio_mode = "auto"
markers = [
    "unit: marks test as unit test i.e. not using any external services (deselect with '-m \"not unit\"')",
    "integration: marks tests as integration i.e. using a database (deselect with '-m \"not integration\"')",
    "e2e: marks tests as e2e tests i.e. using a client api and a database (deselect with '-m \"not e2e\"')",
    "marked: just marked"
]
pythonpath = [".", "src", ]

[tool.coverage.run]
source = ["src"]
omit = ["__init__.py", "*/migrations/*"]
data_file = ".cache/coverage/.coverage"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
warn_no_return = false
cache_dir = "backend/.cache/mypy"
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
exclude = ["migrations"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
