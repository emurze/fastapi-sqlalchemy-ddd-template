version: "3.9"
services:
  api:
    build:
      context: backend
      dockerfile: backend/dockerfile.dev
    image: api:v1
    container_name: api
    networks:
      - backend
    ports:
      - '8080:8080'
    env_file:
      - ./backend/.env/.app.env
    volumes:
      - ./backend/htmlcov:/service/htmlcov
      - ./backend/src:/service/src
      - ./backend/tests:/service/tests
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: emurze/testdb_postgres:16
    container_name: db
    networks:
      - backend
    ports:
      - '5432:5432'
    env_file:
      - ./backend/.env/.db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin4:
    image: dpage/pgadmin4:8.1
    container_name: pgadmin4
    networks:
      - backend
    ports:
      - '8888:80'
    env_file:
      - ./backend/.env/.pgadmin.env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    depends_on:
      - db

  cache:
    image: 'redis:7'
    container_name: 'cache'
    command: redis-server /etc/redis.conf
    networks:
      - backend
    volumes:
      - cache_data:/data
      - ./backend/src/shared/infra/redis/cache/conf/redis.conf:/etc/redis.conf
    restart: unless-stopped

volumes:
  cache_data:
  pgadmin_data:
  postgres_data:

networks:
  backend: